#!/bin/bash
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2020-present Fewtarius

. /etc/profile
DIR=$(realpath $(dirname $0))

. ${DIR}/update-utils

### Main

NETWORKING=$(online_status)
if [ "${NETWORKING}" == true ]
then
  getlatest
  UFILE="${PREFIX}-${TAG}.tar"
else
  if [ -e "${USTAGE}/${UFILE}" ]
  then
    TAG=$(echo ${UFILE} | awk 'BEGIN {FS="-"}; {split($3, a, /.tar/); print a[1]}')
  fi
fi

if [ "${TAG}" -ge "${MYVERSION}" ]
then
  # We may be able to deprecate this now.  Will leave for a while though.
  # If there is an update we still have to check if it's a new one
  # this is done by comparing the sha256 checksum to the one of
  # the last installed package. This information is written by 
  # /usr/bin/351elec-upgrade while it fetches the next update
  # The checksum is stored in /storage/.config/.OS_SHA256
  LSHA=$(cat ${OS_SHA256})
  if [ ! "$LSHA" == "" ]; then
	curl -H 'Cache-Control: no-cache' -Lo "${USTAGE}/${PREFIX}-${TAG}.sha256" "${REPO}/${PREFIX}-${TAG}.sha256" &> /dev/null
	DLSUM=$(cat ${USTAGE}/${PREFIX}-${TAG}.sha256 | awk '{print $1}')
	rm -f ${USTAGE}/${PREFIX}-${TAG}.sha256
	if [ "${LSHA}" == "${DLSUM}" ]; then
		# we are called by '/usr/bin/batocera-config canupdate'
		# and that expects a 'no' in return if there are no new updates
		# '/usr/bin/batocera-config canupdate' itself is called by
		# ES (ApiSystem.cpp) to check if there are any new updates.
		echo "no"
		exit 1
	fi
  fi
  echo "${TAG} ${BAND^^}"
  exit 0
else
  echo "NO UPDATE AVAILABLE"
  exit 1
fi
